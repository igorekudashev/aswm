{
    net.minecraft.server.v1_16_R1.WorldServer[] defaultWorlds = (net.minecraft.server.v1_16_R1.WorldServer[]) com.grinderwolf.swm.clsm.ClassModifier.getDefaultWorlds();

    if (defaultWorlds != null) {
        System.out.println("Overriding default worlds");

        for (int worldId = 0; worldId < 3; ++worldId) {
            net.minecraft.server.v1_16_R1.WorldServer world = defaultWorlds[worldId];
            net.minecraft.server.v1_16_R1.WorldDataServer worlddata;
            net.minecraft.server.v1_16_R1.ResourceKey typeKey = net.minecraft.server.v1_16_R1.DimensionManager.OVERWORLD;
            byte dimension = 0;
            net.minecraft.server.v1_16_R1.ResourceKey dimensionKey = net.minecraft.server.v1_16_R1.WorldDimension.OVERWORLD;

            if (worldId == 1) {
                if (getAllowNether()) {
                    dimension = -1;
                    dimensionKey = net.minecraft.server.v1_16_R1.WorldDimension.THE_NETHER;
                    typeKey = net.minecraft.server.v1_16_R1.DimensionManager.THE_NETHER;
                } else {
                    continue;
                }
            }

            if (worldId == 2) {
                if (server.getAllowEnd()) {
                    dimension = 1;
                    dimensionKey = net.minecraft.server.v1_16_R1.WorldDimension.THE_END;
                    typeKey = net.minecraft.server.v1_16_R1.DimensionManager.THE_END;
                } else {
                    continue;
                }
            }

            java.lang.String worldType = org.bukkit.World.Environment.getEnvironment(dimension).toString().toLowerCase();
            java.lang.String name = (dimension == 0) ? $1 : $1 + "_" + worldType;
            net.minecraft.server.v1_16_R1.Convertable.ConversionSession worldSession;
            if (dimension == 0) {
                worldSession = $0.convertable;
            } else {
                try {
                    worldSession = net.minecraft.server.v1_16_R1.Convertable.a(server.getWorldContainer().toPath()).c(name, dimensionKey);
                } catch (java.io.IOException ex) {
                    throw new java.lang.RuntimeException(ex);
                }
            }

            org.bukkit.generator.ChunkGenerator gen = $0.server.getGenerator(name);

            net.minecraft.server.v1_16_R1.IRegistryCustom.Dimension iregistrycustom_dimension = net.minecraft.server.v1_16_R1.IRegistryCustom.b();

            net.minecraft.server.v1_16_R1.RegistryReadOps registryreadops = net.minecraft.server.v1_16_R1.RegistryReadOps.a((com.mojang.serialization.DynamicOps) net.minecraft.server.v1_16_R1.DynamicOpsNBT.a, $0.dataPackResources.h(), iregistrycustom_dimension);
            worlddata = (net.minecraft.server.v1_16_R1.WorldDataServer) worldSession.a((com.mojang.serialization.DynamicOps) registryreadops, datapackconfiguration);
            if (worlddata == null) {
                net.minecraft.server.v1_16_R1.WorldSettings worldsettings;
                net.minecraft.server.v1_16_R1.GeneratorSettings generatorsettings;

                if ($0.isDemoMode()) {
                    worldsettings = net.minecraft.server.v1_16_R1.MinecraftServer.c;
                    generatorsettings = net.minecraft.server.v1_16_R1.GeneratorSettings.b;
                } else {
                    net.minecraft.server.v1_16_R1.DedicatedServerProperties dedicatedserverproperties = ((net.minecraft.server.v1_16_R1.DedicatedServer) $0).getDedicatedServerProperties();

                    worldsettings = new net.minecraft.server.v1_16_R1.WorldSettings(dedicatedserverproperties.levelName, dedicatedserverproperties.gamemode, dedicatedserverproperties.hardcore, dedicatedserverproperties.difficulty, false, new net.minecraft.server.v1_16_R1.GameRules(), datapackconfiguration);
                    generatorsettings = options.has("bonusChest") ? dedicatedserverproperties.generatorSettings.k() : dedicatedserverproperties.generatorSettings;
                }

                worlddata = new net.minecraft.server.v1_16_R1.WorldDataServer(worldsettings, generatorsettings, com.mojang.serialization.Lifecycle.stable());
            }
            worlddata.checkName(name);

            net.minecraft.server.v1_16_R1.IWorldDataServer iworlddataserver = worlddata;
            net.minecraft.server.v1_16_R1.GeneratorSettings generatorsettings = worlddata.getGeneratorSettings();
            boolean flag = generatorsettings.isDebugWorld();
            long i = generatorsettings.getSeed();
            long j = net.minecraft.server.v1_16_R1.BiomeManager.a(i);
            java.util.List list = com.google.common.collect.ImmutableList.of(new net.minecraft.server.v1_16_R1.MobSpawnerPhantom(), new net.minecraft.server.v1_16_R1.MobSpawnerPatrol(), new net.minecraft.server.v1_16_R1.MobSpawnerCat(), new net.minecraft.server.v1_16_R1.VillageSiege(), new net.minecraft.server.v1_16_R1.MobSpawnerTrader(iworlddataserver));
            net.minecraft.server.v1_16_R1.RegistryMaterials registrymaterials = generatorsettings.e();
            net.minecraft.server.v1_16_R1.WorldDimension worlddimension = (net.minecraft.server.v1_16_R1.WorldDimension) registrymaterials.a(dimensionKey);
            net.minecraft.server.v1_16_R1.DimensionManager dimensionmanager;
            net.minecraft.server.v1_16_R1.ChunkGenerator chunkgenerator;

            if (worlddimension == null) {
                dimensionmanager = net.minecraft.server.v1_16_R1.DimensionManager.a();
                chunkgenerator = net.minecraft.server.v1_16_R1.GeneratorSettings.a((new java.util.Random()).nextLong());
            } else {
                dimensionmanager = worlddimension.b();
                chunkgenerator = worlddimension.c();
            }

            net.minecraft.server.v1_16_R1.ResourceKey worldKey = net.minecraft.server.v1_16_R1.ResourceKey.a(net.minecraft.server.v1_16_R1.IRegistry.ae, dimensionKey.a());

            if (worldId == 0) {
                if (world == null) {
                    $0.saveData = worlddata;
                    $0.saveData.setGameType(((net.minecraft.server.v1_16_R1.DedicatedServer) $0).getDedicatedServerProperties().gamemode);

                    net.minecraft.server.v1_16_R1.WorldLoadListener worldloadlistener = $0.worldLoadListenerFactory.create(11);

                    world = new net.minecraft.server.v1_16_R1.WorldServer($0, $0.executorService, worldSession, iworlddataserver, worldKey, typeKey, dimensionmanager, worldloadlistener, chunkgenerator, flag, j, list, true, org.bukkit.World.Environment.getEnvironment(dimension), gen);
                }

                net.minecraft.server.v1_16_R1.WorldPersistentData worldpersistentdata = world.getWorldPersistentData();
                $0.initializeScoreboards(worldpersistentdata);
                $0.server.scoreboardManager = new org.bukkit.craftbukkit.v1_16_R1.scoreboard.CraftScoreboardManager($0, world.getScoreboard());
                $0.persistentCommandStorage = new net.minecraft.server.v1_16_R1.PersistentCommandStorage(worldpersistentdata);
            } else if (world == null) {
                net.minecraft.server.v1_16_R1.WorldLoadListener worldloadlistener = $0.worldLoadListenerFactory.create(11);
                world = new net.minecraft.server.v1_16_R1.WorldServer($0, $0.executorService, worldSession, iworlddataserver, worldKey, typeKey, dimensionmanager, worldloadlistener, chunkgenerator, flag, j, com.google.common.collect.ImmutableList.of(), true, org.bukkit.World.Environment.getEnvironment(dimension), gen);
            }

            worlddata.a($0.getServerModName(), $0.getModded().isPresent());
            $0.initWorld(world, worlddata, saveData, worlddata.getGeneratorSettings());
            $0.server.getPluginManager().callEvent(new org.bukkit.event.world.WorldInitEvent(world.getWorld()));

            $0.worldServer.put(world.getDimensionKey(), world);
            $0.getPlayerList().setPlayerFileData(world);

            if (worlddata.getCustomBossEvents() != null) {
                $0.getBossBattleCustomData().load(worlddata.getCustomBossEvents());
            }
        }
        $0.updateWorldSettings();
        java.util.Iterator worldList = $0.getWorlds().iterator();
        while (worldList.hasNext()) {
            net.minecraft.server.v1_16_R1.WorldServer world = (net.minecraft.server.v1_16_R1.WorldServer) worldList.next();
            $0.loadSpawn(world.getChunkProvider().playerChunkMap.worldLoadListener, world);
            $0.server.getPluginManager().callEvent(new org.bukkit.event.world.WorldLoadEvent(world.getWorld()));
        }

        $0.server.enablePlugins(org.bukkit.plugin.PluginLoadOrder.POSTWORLD);
        $0.server.getPluginManager().callEvent(new org.bukkit.event.server.ServerLoadEvent(org.bukkit.event.server.ServerLoadEvent.LoadType.STARTUP));
        $0.serverConnection.acceptConnections();
    }
}